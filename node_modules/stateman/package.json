{
  "name": "stateman",
  "version": "0.1.2",
  "description": "A state-based router library, designed for complex SPA development",
  "keywords": [
    "router",
    "state",
    "spa"
  ],
  "main": "src/index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:leeluolee/maze"
  },
  "scripts": {
    "test": "gulp travis --phantomjs"
  },
  "author": {
    "name": "leeluolee"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/leeluolee/maze/issues"
  },
  "homepage": "https://github.com/leeluolee/maze",
  "devDependencies": {
    "gulp-jshint": "~1.5.3",
    "gulp-shell": "^0.2.4",
    "gulp-webpack": "^0.3.0",
    "gulp-mocha": "~0.4.1",
    "gulp-uglify": "~0.2.1",
    "gulp-util": "~2.2.14",
    "mocha": "~1.18.2",
    "through2": "~0.4.1",
    "expect.js": "^0.3.1",
    "gulp": "^3.8.10",
    "karma": "~0.12.6",
    "karma-mocha": "~0.1.3",
    "karma-phantomjs-launcher": "~0.1.4",
    "karma-coverage": "~0.2.4",
    "karma-ie-launcher": "~0.1.5",
    "karma-chrome-launcher": "~0.1.4",
    "karma-firefox-launcher": "~0.1.3",
    "karma-commonjs": "0.0.12",
    "gulp-bump": "^0.1.10",
    "gulp-git": "^0.5.0",
    "gulp-prompt": "^0.1.1",
    "gulp-tag-version": "^1.0.2",
    "yargs": "^1.3.1"
  },
  "readme": "StateMan\n=======\n\nstate manager: A concise, flexible foundation for complex application routing.\n\n\n## Why Another wheel. \n\nFirstly, I promise stateman is considered irreplaceable\n\nstateman is a state-based libraring that focusing on complex  application routing.\n\nSPA(Single Page Application) is become an common technology choice in morden web development , we need a routing library to help us organizing our logic, and make every page locatable(through the url).\n\nBut, the SPA is also become more and more complex, the routing-style that similar with server-side routing (express.Router.. etc) don't meet the requirements anymore. we need a well-designed foundation to simplify our logic.\n\n[ui-router] go the right way, they abstarct a concept named __state__ to replace the real url to represent the application state. the state is \n\n\n##Feature\n\nstateman is borned in requirements, it reuse the concept __state__ in [ui-router], it is\n\n0. nested routing support based on state.\n1. standalone with 9kb (minify && no gzip) source code\n2. async routing when you need asynchronous logic in state.\n3. support IE6+ and all other modern browser.\n4. history supported, fallback to hash-based in old browser.\n5. concise API, deadly simple to getting start with it.\n\n\n\n## installation\n\n1. bower\n2. npm (browserify or other based on commonjs)\n3. component\n\n\n4. script\n\n\nchange name to stateman.\n\n## Document\n\n\n\n\n\n\n1. describe your \n\n\n```javascript\n\nstateman.state(\"level1.level2\", {\n  url: \"hello?query&hello\",\n  enter: function(option){\n    var done = this.async();\n    this.manager === stateman; // true\n    stateman.current = this;\n    stateman.previous = state;\n    done();\n\n  },\n  leave: function(option){\n    this.manager == stateman;\n    state.current = next;\n    state.previous = this;\n  },\n  update: function(option){\n    state.current = \"hello\";\n  },\n  martch: function(url){\n    return {\n      name:\n    } \n  },\n  // match the wilcat\n  include: function(){\n\n  }\n})\n\nhref={state.list(name:1)}\n\nstate.state(\"l1.l2\", {\n  url: \"hello?\",\n  enter: function(option){\n  // Stateman\n\n    // API\n    stateman.notifiy(\"state.hello.*\", {});\n    stateman.nav(\"/home/code/1?hello\", {});\n    stateman.go(\"state.list\", {param:{}});\n    stateman.encode(\"state.list\", param);\n    stateman.decode(\"/home/code\")\n\n    stateman.start;\n    stateman.stop;\n\n\n    // property \n    stateman.current\n    stateman.previous\n    stateman.pending\n\n    // message\n    stateman.on\n    stateman.off\n    stateman.emit\n\n\n    events:\n      \"history:change\"\n      \"notfound\"\n      \"redirect\"\n\n  \n    //some \n\n\n     state.state(); // \n     state.async(); //need pending === this; so , leave or enter is permit\n     state.decode(url); // you can pass your own match return param\n     state.encode(param);\n     state.enter\n     state.leave\n     state.update\n\n     // propety\n     state.manager\n     state.name\n\n     state.on\n     state.off\n     state.emit\n\n\n  },\n  leave: function(){\n    stateman.notify(\"\") \n  }\n})\n\n\nstateman\n  .state(\"l1.l2\")\n  .emit(\"hello\");\n\n\n\n\n```\n\n## if the state is pending, we cant redirect to other . to avoid \n\nif the s",
  "readmeFilename": "README.md",
  "_id": "stateman@0.1.2",
  "_shasum": "ff7c1822bf83bb77d98e36677de407f9ec8dca03",
  "_resolved": "git+https://github.com/leeluolee/stateman#97ea479a5c3d2f987f42982a01736119e9aa5ea2",
  "_from": "stateman@git+https://github.com/leeluolee/stateman"
}
